* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 50%, #fd79a8 100%);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #333;
    position: relative;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text y="50" font-size="20" fill="rgba(255,255,255,0.01)">üêæ</text></svg>'),
        url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text y="50" font-size="15" fill="rgba(255,255,255,0.02)">üê±</text></svg>');
    background-size: 150px 150px, 100px 100px;
    background-position: 0 0, 50px 50px;
    pointer-events: none;
    z-index: -1;
}

.container {
    text-align: center;
    background: rgba(255, 255, 255, 0.98);
    padding: 30px;
    border-radius: 25px;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
    border: 3px solid rgba(255, 182, 193, 0.3);
    position: relative;
}

.container::before {
    content: 'üêæ';
    position: absolute;
    top: -15px;
    right: -15px;
    font-size: 2em;
}

.container::after {
    content: 'üê±';
    position: absolute;
    bottom: -15px;
    left: -15px;
    font-size: 2em;
}

h1 {
    color: #4a5568;
    margin-bottom: 20px;
    font-size: 2.5em;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
}

.game-controls {
    margin-bottom: 15px;
    padding: 15px;
    background: #e2e8f0;
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    flex-wrap: wrap;
}

.game-mode, .difficulty {
    display: flex;
    align-items: center;
    gap: 8px;
}

.game-controls label {
    font-weight: bold;
    color: #2d3748;
}

.game-controls select {
    padding: 8px 12px;
    border: 2px solid #cbd5e0;
    border-radius: 6px;
    background: white;
    color: #2d3748;
    font-size: 14px;
    cursor: pointer;
    transition: border-color 0.2s ease;
}

.game-controls select:focus {
    outline: none;
    border-color: #4299e1;
}

.game-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding: 15px;
    background: #f7fafc;
    border-radius: 10px;
}

.current-player {
    font-size: 1.2em;
    font-weight: bold;
    color: #2d3748;
}

#playerDisplay {
    color: #e53e3e;
    font-size: 1.1em;
}

.reset-btn {
    padding: 10px 20px;
    background: #4299e1;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1em;
    font-weight: bold;
    transition: all 0.3s ease;
}

.reset-btn:hover {
    background: #3182ce;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.game-board {
    display: grid;
    grid-template-columns: repeat(15, 30px);
    grid-template-rows: repeat(15, 30px);
    gap: 1px;
    background: #8b4513;
    padding: 10px;
    border-radius: 10px;
    margin: 0 auto;
    box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.3);
}

.cell {
    width: 30px;
    height: 30px;
    background: #deb887;
    border: 1px solid #8b4513;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.2s ease;
    position: relative;
}

.cell:hover {
    background: #f4e4bc;
    transform: scale(1.05);
}

.cell.black {
    background: radial-gradient(circle, #2d3748, #1a202c);
    cursor: default;
    border-radius: 50%;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

.cell.white {
    background: radial-gradient(circle, #f7fafc, #e2e8f0);
    cursor: default;
    border-radius: 50%;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.cell.black:hover,
.cell.white:hover {
    transform: none;
}

.game-status {
    margin-top: 20px;
    font-size: 1.3em;
    font-weight: bold;
    color: #2d3748;
    padding: 15px;
    background: #edf2f7;
    border-radius: 10px;
    border-left: 5px solid #4299e1;
}

.winner {
    color: #38a169 !important;
    background: #f0fff4 !important;
    border-left-color: #38a169 !important;
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.02);
    }
    100% {
        transform: scale(1);
    }
}

.winning-line {
    background: #ffd700 !important;
    animation: glow 1s ease-in-out infinite alternate;
}

@keyframes glow {
    from {
        box-shadow: 0 0 5px #ffd700;
    }
    to {
        box-shadow: 0 0 20px #ffd700;
    }
}

/* Mobile-first responsive design */
@media (max-width: 480px) {
    body {
        padding: 10px;
        align-items: flex-start;
        padding-top: 20px;
    }
    
    .container {
        width: 100%;
        max-width: 100%;
        padding: 15px;
        margin: 0;
        border-radius: 10px;
    }
    
    h1 {
        font-size: 1.8em;
        margin-bottom: 15px;
    }
    
    .game-controls {
        flex-direction: column;
        gap: 15px;
        padding: 10px;
    }
    
    .game-mode, .difficulty {
        flex-direction: column;
        gap: 5px;
        text-align: center;
        width: 100%;
    }
    
    .game-controls select {
        width: 100%;
        max-width: 200px;
        padding: 10px;
        font-size: 16px;
    }
    
    .game-info {
        flex-direction: column;
        gap: 15px;
        padding: 10px;
        text-align: center;
    }
    
    .current-player {
        font-size: 1.1em;
    }
    
    .reset-btn {
        width: 100%;
        max-width: 200px;
        padding: 12px 20px;
        font-size: 1.1em;
    }
    
    .game-board {
        grid-template-columns: repeat(15, min(20px, calc((100vw - 60px) / 15)));
        grid-template-rows: repeat(15, min(20px, calc((100vw - 60px) / 15)));
        padding: 5px;
        max-width: 100%;
        overflow: visible;
    }
    
    .cell {
        width: min(20px, calc((100vw - 60px) / 15));
        height: min(20px, calc((100vw - 60px) / 15));
        min-width: 18px;
        min-height: 18px;
    }
    
    .game-status {
        font-size: 1.1em;
        padding: 12px;
    }
}

@media (min-width: 481px) and (max-width: 768px) {
    .container {
        padding: 20px;
        max-width: 90%;
    }
    
    h1 {
        font-size: 2.2em;
    }
    
    .game-board {
        grid-template-columns: repeat(15, 25px);
        grid-template-rows: repeat(15, 25px);
    }
    
    .cell {
        width: 25px;
        height: 25px;
    }
    
    .game-controls {
        gap: 15px;
    }
}

@media (min-width: 769px) and (max-width: 1024px) {
    .container {
        padding: 25px;
        max-width: 80%;
    }
    
    .game-board {
        grid-template-columns: repeat(15, 28px);
        grid-template-rows: repeat(15, 28px);
    }
    
    .cell {
        width: 28px;
        height: 28px;
    }
}

@media (min-width: 1025px) {
    .container {
        max-width: 700px;
    }
}

/* Touch-friendly improvements */
@media (hover: none) and (pointer: coarse) {
    .cell {
        cursor: pointer;
    }
    
    .cell:hover {
        background: #f4e4bc;
    }
    
    .reset-btn {
        padding: 15px 25px;
        font-size: 1.1em;
    }
    
    .game-controls select {
        padding: 12px 15px;
        font-size: 16px;
    }
}

/* ÊÖ∂Á•ùÂãïÁï´Ê®£Âºè */
.celebration-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    animation: fadeIn 0.5s ease-in;
}

.celebration-content {
    text-align: center;
    color: white;
    animation: bounceIn 0.8s ease-out;
}

.celebration-emoji {
    font-size: 4em;
    animation: spin 2s ease-in-out infinite;
    margin-bottom: 20px;
}

.celebration-text {
    font-size: 2em;
    font-weight: bold;
    margin-bottom: 15px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    animation: glow 1.5s ease-in-out infinite alternate;
}

.celebration-sub-text {
    font-size: 1.3em;
    margin-bottom: 30px;
    color: #ffd700;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    animation: bounce 2s ease-in-out infinite;
}

.celebration-fireworks {
    position: relative;
    height: 100px;
}

.firework {
    position: absolute;
    font-size: 2em;
    animation: catFirework 2s ease-out infinite;
}

.firework:nth-child(1) {
    left: 20%;
    animation-delay: 0s;
}

.firework:nth-child(2) {
    left: 50%;
    animation-delay: 0.7s;
}

.firework:nth-child(3) {
    left: 80%;
    animation-delay: 1.4s;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes bounceIn {
    0% {
        transform: scale(0.3);
        opacity: 0;
    }
    50% {
        transform: scale(1.05);
    }
    70% {
        transform: scale(0.9);
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes glow {
    from {
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }
    to {
        text-shadow: 2px 2px 20px rgba(255, 255, 255, 0.8), 
                     0 0 30px rgba(255, 255, 255, 0.6);
    }
}

@keyframes firework {
    0% {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
    50% {
        transform: translateY(-50px) scale(1.2);
        opacity: 0.8;
    }
    100% {
        transform: translateY(-100px) scale(0.5);
        opacity: 0;
    }
}

@keyframes meowBounce {
    0% {
        transform: scale(0) rotate(0deg);
        opacity: 0;
    }
    50% {
        transform: scale(1.3) rotate(10deg);
        opacity: 1;
    }
    100% {
        transform: scale(1) rotate(0deg);
        opacity: 1;
    }
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-10px);
    }
    60% {
        transform: translateY(-5px);
    }
}

@keyframes catFirework {
    0% {
        transform: translateY(0) scale(1) rotate(0deg);
        opacity: 1;
    }
    25% {
        transform: translateY(-30px) scale(1.2) rotate(10deg);
        opacity: 1;
    }
    50% {
        transform: translateY(-60px) scale(1.5) rotate(-10deg);
        opacity: 0.8;
    }
    75% {
        transform: translateY(-40px) scale(1.1) rotate(5deg);
        opacity: 0.6;
    }
    100% {
        transform: translateY(-80px) scale(0.8) rotate(0deg);
        opacity: 0;
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0) rotate(0deg);
    }
    50% {
        transform: translateY(-15px) rotate(5deg);
    }
}